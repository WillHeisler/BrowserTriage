user,browser,artifact_type,url,title,threat_type,confidence,description,evidence,mitigation,references,severity,visit_time
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' OR '1'='1'#; Matched pattern in decoded form: 1' OR '1'='1'#; Found in browser history at 2025-07-04 00:14:17,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:14:42
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#; Found in browser history at 2025-07-04 00:14:17,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:14:42
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,"SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+%40%40version%2C%40%40version_comment; Parameter 'id' contains potential SQL injection: 1' UNION SELECT @@version,@@version_comment#; Matched pattern in decoded form: 1' UNION SELECT @@version,@@version_comment#; Found in browser history at 2025-07-04 00:14:00",Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:14:42
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+%40%40version%2C%40%40version_comment; Found in browser history at 2025-07-04 00:14:00,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:14:42
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,"SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Cdatabase%28%29%23&Submit; Parameter 'id' contains potential SQL injection: 1' UNION SELECT user(),database()#; Matched pattern in decoded form: 1' UNION SELECT user(),database()#; Found in browser history at 2025-07-04 00:13:46",Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:14:42
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Cdatabase%28%29%23&Submit; Found in browser history at 2025-07-04 00:13:46,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:14:42
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,"SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Ctable%28%29%2Cdatabase%2; Parameter 'id' contains potential SQL injection: 1' UNION SELECT user(),table(),database()#; Matched pattern in decoded form: 1' UNION SELECT user(),table(),database()#; Found in browser history at 2025-07-04 00:13:35",Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:14:42
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Ctable%28%29%2Cdatabase%2; Found in browser history at 2025-07-04 00:13:35,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:14:42
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+2%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' OR '1'='1' ORDER BY 2#; Matched pattern in decoded form: 1' OR '1'='1' ORDER BY 2#; Found in browser history at 2025-07-04 00:13:17,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:14:42
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+2%23&Submit=Submit#; Found in browser history at 2025-07-04 00:13:17,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:14:42
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,"SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Cdatabase%28%29--&Submit=; Parameter 'id' contains potential SQL injection: 1' UNION SELECT user(),database()--; Matched pattern in decoded form: 1' UNION SELECT user(),database()--; Found in browser history at 2025-07-04 00:13:16",Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:14:42
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Cdatabase%28%29--&Submit=; Found in browser history at 2025-07-04 00:13:16,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:14:42
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' OR 1=1#; Matched pattern in decoded form: 1' OR 1=1#; Found in browser history at 2025-07-04 00:13:02,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:14:42
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#; Found in browser history at 2025-07-04 00:13:02,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:14:42
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=%27+OR+%271%27%3D%271&Submit=Submit#; Parameter 'id' contains potential SQL injection: ' OR '1'='1; Matched pattern in decoded form: ' OR '1'='1; Found in browser history at 2025-07-04 00:12:50,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:14:42
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=%27+OR+%271%27%3D%271&Submit=Submit#; Found in browser history at 2025-07-04 00:12:50,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:14:42
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' OR '1'='1'#; Matched pattern in decoded form: 1' OR '1'='1'#; Found in browser history at 2025-07-04 00:14:17,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:12:40
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#; Found in browser history at 2025-07-04 00:14:17,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:12:40
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,"SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+%40%40version%2C%40%40version_comment; Parameter 'id' contains potential SQL injection: 1' UNION SELECT @@version,@@version_comment#; Matched pattern in decoded form: 1' UNION SELECT @@version,@@version_comment#; Found in browser history at 2025-07-04 00:14:00",Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:12:40
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+%40%40version%2C%40%40version_comment; Found in browser history at 2025-07-04 00:14:00,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:12:40
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,"SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Cdatabase%28%29%23&Submit; Parameter 'id' contains potential SQL injection: 1' UNION SELECT user(),database()#; Matched pattern in decoded form: 1' UNION SELECT user(),database()#; Found in browser history at 2025-07-04 00:13:46",Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:12:40
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Cdatabase%28%29%23&Submit; Found in browser history at 2025-07-04 00:13:46,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:12:40
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,"SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Ctable%28%29%2Cdatabase%2; Parameter 'id' contains potential SQL injection: 1' UNION SELECT user(),table(),database()#; Matched pattern in decoded form: 1' UNION SELECT user(),table(),database()#; Found in browser history at 2025-07-04 00:13:35",Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:12:40
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Ctable%28%29%2Cdatabase%2; Found in browser history at 2025-07-04 00:13:35,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:12:40
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+2%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' OR '1'='1' ORDER BY 2#; Matched pattern in decoded form: 1' OR '1'='1' ORDER BY 2#; Found in browser history at 2025-07-04 00:13:17,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:12:40
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+2%23&Submit=Submit#; Found in browser history at 2025-07-04 00:13:17,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:12:40
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,"SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Cdatabase%28%29--&Submit=; Parameter 'id' contains potential SQL injection: 1' UNION SELECT user(),database()--; Matched pattern in decoded form: 1' UNION SELECT user(),database()--; Found in browser history at 2025-07-04 00:13:16",Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:12:40
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Cdatabase%28%29--&Submit=; Found in browser history at 2025-07-04 00:13:16,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:12:40
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' OR 1=1#; Matched pattern in decoded form: 1' OR 1=1#; Found in browser history at 2025-07-04 00:13:02,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:12:40
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#; Found in browser history at 2025-07-04 00:13:02,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:12:40
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=%27+OR+%271%27%3D%271&Submit=Submit#; Parameter 'id' contains potential SQL injection: ' OR '1'='1; Matched pattern in decoded form: ' OR '1'='1; Found in browser history at 2025-07-04 00:12:50,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:12:40
brows,chrome,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=%27+OR+%271%27%3D%271&Submit=Submit#; Found in browser history at 2025-07-04 00:12:50,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:12:40
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' OR '1'='1'#; Matched pattern in decoded form: 1' OR '1'='1'#; Found in browser history at 2025-07-04 00:08:28,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:08:28
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#; Found in browser history at 2025-07-04 00:08:28,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:08:28
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+2%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+2%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' OR '1'='1' ORDER BY 2#; Matched pattern in decoded form: 1' OR '1'='1' ORDER BY 2#; Found in browser history at 2025-07-04 00:07:16,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:07:16
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+2%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+2%23&Submit=Submit#; Found in browser history at 2025-07-04 00:07:16,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:07:16
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+2%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+2%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' OR '1'='1' ORDER BY 2#; Matched pattern in decoded form: 1' OR '1'='1' ORDER BY 2#; Found in browser history at 2025-07-04 00:07:16,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:07:03
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+2%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+2%23&Submit=Submit#; Found in browser history at 2025-07-04 00:07:16,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:07:03
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' OR 1=1#; Matched pattern in decoded form: 1' OR 1=1#; Found in browser history at 2025-07-04 00:06:55,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:06:55
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#; Found in browser history at 2025-07-04 00:06:55,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:06:55
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+32&Submit=Submit#,,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+32&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' OR '1'='1' ORDER BY 32; Matched pattern in decoded form: 1' OR '1'='1' ORDER BY 32; Found in browser history at 2025-07-04 00:06:51,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:06:51
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+32&Submit=Submit#,,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+32&Submit=Submit#; Found in browser history at 2025-07-04 00:06:51,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:06:51
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' OR 1=1#; Matched pattern in decoded form: 1' OR 1=1#; Found in browser history at 2025-07-04 00:06:55,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:06:45
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#; Found in browser history at 2025-07-04 00:06:55,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:06:45
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+3%23&Submit=Submit#,,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+3%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' OR '1'='1' ORDER BY 3#; Matched pattern in decoded form: 1' OR '1'='1' ORDER BY 3#; Found in browser history at 2025-07-04 00:06:42,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:06:42
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+3%23&Submit=Submit#,,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+3%23&Submit=Submit#; Found in browser history at 2025-07-04 00:06:42,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:06:42
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' OR 1=1#; Matched pattern in decoded form: 1' OR 1=1#; Found in browser history at 2025-07-04 00:06:55,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:06:33
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#; Found in browser history at 2025-07-04 00:06:55,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:06:33
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' OR '1'='1'#; Matched pattern in decoded form: 1' OR '1'='1'#; Found in browser history at 2025-07-04 00:08:28,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:06:24
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#; Found in browser history at 2025-07-04 00:08:28,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:06:24
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=%27+OR+%271%27%3D%271&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=%27+OR+%271%27%3D%271&Submit=Submit#; Parameter 'id' contains potential SQL injection: ' OR '1'='1; Matched pattern in decoded form: ' OR '1'='1; Found in browser history at 2025-07-04 00:06:16,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:06:16
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/?id=%27+OR+%271%27%3D%271&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=%27+OR+%271%27%3D%271&Submit=Submit#; Found in browser history at 2025-07-04 00:06:16,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:06:16
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,"SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+%40%40version%2C%40%40version_comment; Parameter 'id' contains potential SQL injection: 1' UNION SELECT @@version,@@version_comment#; Matched pattern in decoded form: 1' UNION SELECT @@version,@@version_comment#; Found in browser history at 2025-07-04 00:08:18",Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:06:07
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+%40%40version%2C%40%40version_comment; Found in browser history at 2025-07-04 00:08:18,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:06:07
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,"SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Cdatabase%28%29%23&Submit; Parameter 'id' contains potential SQL injection: 1' UNION SELECT user(),database()#; Matched pattern in decoded form: 1' UNION SELECT user(),database()#; Found in browser history at 2025-07-04 00:08:00",Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:06:07
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Cdatabase%28%29%23&Submit; Found in browser history at 2025-07-04 00:08:00,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:06:07
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,"SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Ctable%28%29%2Cdatabase%2; Parameter 'id' contains potential SQL injection: 1' UNION SELECT user(),table(),database()#; Matched pattern in decoded form: 1' UNION SELECT user(),table(),database()#; Found in browser history at 2025-07-04 00:07:41",Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:06:07
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Ctable%28%29%2Cdatabase%2; Found in browser history at 2025-07-04 00:07:41,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:06:07
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,"SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Cdatabase%28%29--&Submit=; Parameter 'id' contains potential SQL injection: 1' UNION SELECT user(),database()--; Matched pattern in decoded form: 1' UNION SELECT user(),database()--; Found in browser history at 2025-07-04 00:07:13",Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-04 00:06:07
brows,edge,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Cdatabase%28%29--&Submit=; Found in browser history at 2025-07-04 00:07:13,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-04 00:06:07
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli_blind/?id=1%27+AND+SLEEP%285%29%23&Submit=Submit#,Vulnerability: SQL Injection (Blind) :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.8,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli_blind/?id=1%27+AND+SLEEP%285%29%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' AND SLEEP(5)#; Matched pattern in decoded form: 1' AND SLEEP(5)#; Found in browser history at 2025-07-03 17:12:19,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-03 17:12:19
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli_blind/?id=1%27+AND+SLEEP%285%29%23&Submit=Submit#,Vulnerability: SQL Injection (Blind) :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli_blind/?id=1%27+AND+SLEEP%285%29%23&Submit=Submit#; Found in browser history at 2025-07-03 17:12:19,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-03 17:12:19
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli_blind/?id=1%27+AND+SLEEP%285%29%23&Submit=Submit#,Vulnerability: SQL Injection (Blind) :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.8,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli_blind/?id=1%27+AND+SLEEP%285%29%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' AND SLEEP(5)#; Matched pattern in decoded form: 1' AND SLEEP(5)#; Found in browser history at 2025-07-03 17:12:19,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-03 17:12:01
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli_blind/?id=1%27+AND+SLEEP%285%29%23&Submit=Submit#,Vulnerability: SQL Injection (Blind) :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli_blind/?id=1%27+AND+SLEEP%285%29%23&Submit=Submit#; Found in browser history at 2025-07-03 17:12:19,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-03 17:12:01
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' OR '1'='1'#; Matched pattern in decoded form: 1' OR '1'='1'#; Found in browser history at 2025-07-03 17:11:45,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-03 17:11:45
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#; Found in browser history at 2025-07-03 17:11:45,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-03 17:11:45
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user()%2Cdatabase()%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,"SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user()%2Cdatabase()%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' UNION SELECT user(),database()#; Matched pattern in decoded form: 1' UNION SELECT user(),database()#; Found in browser history at 2025-07-03 17:11:25",Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-03 17:11:25
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user()%2Cdatabase()%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user()%2Cdatabase()%23&Submit=Submit#; Found in browser history at 2025-07-03 17:11:25,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-03 17:11:25
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+2%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+2%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' OR '1'='1' ORDER BY 2#; Matched pattern in decoded form: 1' OR '1'='1' ORDER BY 2#; Found in browser history at 2025-07-03 17:10:37,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-03 17:10:37
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+2%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27+ORDER+BY+2%23&Submit=Submit#; Found in browser history at 2025-07-03 17:10:37,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-03 17:10:37
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' OR 1=1#; Matched pattern in decoded form: 1' OR 1=1#; Found in browser history at 2025-07-03 17:10:25,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-03 17:10:25
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+1%3D1%23&Submit=Submit#; Found in browser history at 2025-07-03 17:10:25,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-03 17:10:25
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#; Parameter 'id' contains potential SQL injection: 1' OR '1'='1'#; Matched pattern in decoded form: 1' OR '1'='1'#; Found in browser history at 2025-07-03 17:11:45,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-03 17:10:14
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+OR+%271%27%3D%271%27%23&Submit=Submit#; Found in browser history at 2025-07-03 17:11:45,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-03 17:10:14
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/?id=%27+OR+%271%27%3D%271&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=%27+OR+%271%27%3D%271&Submit=Submit#; Parameter 'id' contains potential SQL injection: ' OR '1'='1; Matched pattern in decoded form: ' OR '1'='1; Found in browser history at 2025-07-03 17:10:04,Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-03 17:10:04
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/?id=%27+OR+%271%27%3D%271&Submit=Submit#,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=%27+OR+%271%27%3D%271&Submit=Submit#; Found in browser history at 2025-07-03 17:10:04,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-03 17:10:04
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,"SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+%40%40version%2C%40%40version_comment; Parameter 'id' contains potential SQL injection: 1' UNION SELECT @@version,@@version_comment#; Matched pattern in decoded form: 1' UNION SELECT @@version,@@version_comment#; Found in browser history at 2025-07-03 17:11:36",Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-03 17:09:57
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+%40%40version%2C%40%40version_comment; Found in browser history at 2025-07-03 17:11:36,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-03 17:09:57
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,"SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Cdatabase%28%29%23&Submit; Parameter 'id' contains potential SQL injection: 1' UNION SELECT user(),database()#; Matched pattern in decoded form: 1' UNION SELECT user(),database()#; Found in browser history at 2025-07-03 17:11:16",Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-03 17:09:57
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Cdatabase%28%29%23&Submit; Found in browser history at 2025-07-03 17:11:16,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-03 17:09:57
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,"SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Ctable%28%29%2Cdatabase%2; Parameter 'id' contains potential SQL injection: 1' UNION SELECT user(),table(),database()#; Matched pattern in decoded form: 1' UNION SELECT user(),table(),database()#; Found in browser history at 2025-07-03 17:11:05",Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-03 17:09:57
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Ctable%28%29%2Cdatabase%2; Found in browser history at 2025-07-03 17:11:05,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-03 17:09:57
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,SQLi,0.9,Potential SQL Injection attack detected in URL parameter,"SQL injection pattern found in URL: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Cdatabase%28%29--&Submit=; Parameter 'id' contains potential SQL injection: 1' UNION SELECT user(),database()--; Matched pattern in decoded form: 1' UNION SELECT user(),database()--; Found in browser history at 2025-07-03 17:10:44",Use parameterized queries and input validation. Apply principle of least privilege to database access. Implement WAF rules.,https://owasp.org/www-community/attacks/SQL_Injection,HIGH,2025-07-03 17:09:57
brows,firefox,history,http://3.141.30.168/vulnerabilities/sqli/,Vulnerability: SQL Injection :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*,CSRF,0.6,Potential Cross-Site Request Forgery (CSRF) attack indicators detected,URL contains potential CSRF pattern: http://3.141.30.168/vulnerabilities/sqli/?id=1%27+UNION+SELECT+user%28%29%2Cdatabase%28%29--&Submit=; Found in browser history at 2025-07-03 17:10:44,"Implement CSRF tokens, verify referrer headers, use SameSite cookies. Validate all state-changing requests.",https://owasp.org/www-community/attacks/csrf,MEDIUM,2025-07-03 17:09:57
